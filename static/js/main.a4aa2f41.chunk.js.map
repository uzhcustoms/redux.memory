{"version":3,"sources":["features/counter/counterSlice.js","features/counter/img/bee.png","features/counter/img/butterfly.png","features/counter/img/elephant.png","features/counter/img/fox.png","features/counter/img/lion.png","features/counter/img/octopus.png","features/counter/img/penguin.png","features/counter/img/snake.png","features/counter/img/owl.png","features/counter/Counter.js","features/counter/Time.js","features/counter/Losing.js","features/counter/Players.js","App.js","app/store.js","index.js"],"names":["arrImg","initialState","counter","cells","Array","from","startGame","finishGame","setTime","isLosing","players","id","name","points","victory","countPlayers","val","i","length","j","size","value","visible","sort","Math","random","counterSlice","createSlice","reducers","addElem","state","action","trunc","payload","previusValue","addTime","time","getFinish","every","cell","item","getLosing","setPlayers","actions","selectCells","flat","selectSetTime","selectLosing","selectStartGame","selectFinishGame","selectPlayers","Counter","useSelector","dispatch","useDispatch","handleClick","e","target","className","map","idx","style","width","transition","onClick","disabled","src","alt","Time","setTimeAction","start","finish","useState","count","setCount","useEffect","interval","setInterval","clearInterval","htmlFor","onChange","type","min","max","Losing","Players","placeholder","App","store","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKA6BA,I,0DAfMA,EAAS,CCdA,IAA0B,gCCA1B,IAA0B,sCCA1B,IAA0B,qCCA1B,IAA0B,gCCA1B,IAA0B,iCCA1B,IAA0B,oCCA1B,IAA0B,oCCA1B,IAA0B,kCCA1B,IAA0B,iCTkBnCC,EAAe,CACnBC,QAAS,EACTC,MAAOC,MAAMC,KAAKD,MAHP,IAGoB,kBAAM,IAAIA,MAH9B,MAIXE,WAAW,EAAOC,YAAY,EAC9BC,QAAS,GACTC,UAAU,EACVC,QAAS,CAAC,CAACC,GAAI,EAAGC,KAAM,WAAYC,OAAQ,EAAGC,SAAS,GAAQ,CAACH,GAAI,EAAGC,KAAM,WAAYC,OAAQ,EAAGC,SAAS,IAC9GC,aAAc,GAGZC,EAAM,EACFC,EAAI,EAAGA,EAAGhB,EAAaE,MAAMe,OAAQD,IAE3C,IAAK,IAAIE,EAAI,EAAGA,EAAGlB,EAAaE,MAAMc,GAAGC,OAAQC,IACpCC,GAAPJ,IACFA,EAAM,GAERf,EAAaE,MAAMc,GAAGE,GAAK,CAACE,MAAOrB,EAAOgB,GAAMM,SAAS,GACzDN,IAGJ,IAAI,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IACrB,IAAI,IAAIF,EAAI,EAAGA,EAAGhB,EAAaE,MAAMe,OAAQD,IAC3ChB,EAAaE,MAAMc,GAAGM,MAAK,kBAAMC,KAAKC,SAAW,MACjDxB,EAAaE,MAAMoB,MAAK,kBAAMC,KAAKC,SAAW,MAM3C,IAAMC,EAAeC,YAAY,CACtCf,KAAM,UACNX,eACA2B,SAAU,CACRC,QAAS,SAACC,EAAOC,GAEf,IAAId,EAAIO,KAAKQ,MAAMD,EAAOE,QArCnB,GAsCHd,EAAIY,EAAOE,QAtCR,EAsCkBT,KAAKQ,MAAMD,EAAOE,QAtCpC,GAwCPH,EAAM3B,MAAMc,GAAGE,GAAGG,SAAU,EACtBQ,EAAM5B,QAAU,GAAK,EACvB4B,EAAMI,aAAe,CAACjB,EAAGA,EAAGE,EAAGA,IAG/BW,EAAMf,eACHe,EAAM3B,MAAM2B,EAAMI,aAAajB,GAAGa,EAAMI,aAAaf,GAAGE,OAASS,EAAM3B,MAAMc,GAAGE,GAAGE,OACpFS,EAAM3B,MAAM2B,EAAMI,aAAajB,GAAGa,EAAMI,aAAaf,GAAGG,SAAU,EAClEQ,EAAM3B,MAAMc,GAAGE,GAAGG,SAAU,GAEzBQ,EAAMf,aAAe,GAAK,EAC3Be,EAAMpB,QAAQ,GAAGG,SAEjBiB,EAAMpB,QAAQ,GAAGG,UAIvBiB,EAAM5B,WAGViC,QAAS,SAACL,EAAOC,GACZD,EAAM5B,QAAU,IAAG4B,EAAMxB,WAAY,GACxCwB,EAAMM,KAAOL,EAAOE,SAGtBzB,QAAS,SAACsB,EAAOC,GAChBD,EAAMtB,QAAUuB,EAAOE,SAGxBI,UAAW,SAACP,GACVA,EAAMvB,WAAauB,EAAM3B,MAAMmC,OAAM,SAAAC,GACnC,OAAOA,EAAKD,OAAM,SAAAE,GAChB,OAAOA,EAAKlB,eAKlBmB,UAAW,SAACX,EAAOC,GACjBD,EAAMrB,SAAWsB,EAAOE,SAG1BS,WAAY,SAACZ,EAAOC,GAClBD,EAAMpB,QAAQqB,EAAOE,QAAQtB,IAAIC,KAAOmB,EAAOE,QAAQZ,UAOtD,EAAwEK,EAAaiB,QAA7Ed,EAAR,EAAQA,QAASM,EAAjB,EAAiBA,QAASE,EAA1B,EAA0BA,UAAW7B,EAArC,EAAqCA,QAASiC,EAA9C,EAA8CA,UAAWC,EAAzD,EAAyDA,WACnDE,EAAc,SAACd,GAAD,OAAWA,EAAM5B,QAAQC,MAAM0C,QAC7CC,EAAgB,SAAChB,GAAD,OAAWA,EAAM5B,QAAQM,SACzCuC,EAAe,SAACjB,GAAD,OAAWA,EAAM5B,QAAQO,UACxCuC,EAAkB,SAAClB,GAAD,OAAWA,EAAM5B,QAAQI,WAC3C2C,EAAmB,SAACnB,GAAD,OAAWA,EAAM5B,QAAQK,YAC5C2C,EAAgB,SAACpB,GAAD,OAAWA,EAAM5B,QAAQQ,SACvCgB,IAAf,Q,OU7GO,SAASyB,IACd,IAAMhD,EAAQiD,YAAYR,GAKpBS,EAAWC,cACXC,EAAc,SAACC,GACnBH,EAASxB,EAAQ2B,EAAEC,OAAO9C,KAC1B0C,EAAShB,MAGX,OACE,mCACE,qBAAKqB,UAAU,SAAf,SACCvD,EAAMwD,KAAI,SAACnB,EAAMoB,GAAP,OACT,wBACEC,MAAO,CAACC,MAAM,GAAD,OAAK,GAAL,KAAeC,WAAY,YACxCL,UAAU,OACV/C,GAAIiD,EAEJI,QAAST,EACTU,SAAUzB,EAAKlB,QANjB,SASMkB,EAAKlB,QAAe,qBAAK4C,IAAK1B,EAAKnB,MAAO8C,IAAI,GAA2BL,MAAM,OAA3D,cAAyCtB,EAAKoB,MAAnD,IALdA,U,WCpBR,SAASQ,IACd,IAAMf,EAAWC,cACXe,EAAgBjB,YAAYN,GAC5BwB,EAAQlB,YAAYJ,GACpBuB,EAASnB,YAAYH,GAC3B,EAAwBuB,mBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAkBA,OAhBAC,qBAAU,WACR,IAAIC,EAAWC,aAAY,WAC3BxB,EAASlB,EAAQsC,IACTC,EAARJ,EAAiBG,EAAQ,EAAc,KACpC,KAQH,OANIF,GAAQO,cAAcF,GACtBH,GAASJ,IACThB,EAASZ,GAAU,IACnBqC,cAAcF,IAGX,kBAAME,cAAcF,OAK3B,sBAAKlB,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SAA0Be,IAC1B,qBAAKf,UAAU,UAAf,SACKY,EACD,sBAAKZ,UAAU,eAAf,UAA8B,oIAA0B,mBAAGA,UAAU,iBAAb,SAA+BW,OACvF,sBAAKX,UAAU,eAAf,UACI,uBAAOqB,QAAQ,UAAf,2GACA,uBAAOpE,GAAG,UAAUqE,SAAU,SAACxB,GAAD,OAAOH,EAAS7C,EAAQgD,EAAEC,OAAOpC,SAAS4D,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAM9D,MAAOgD,YChCxH,SAASe,IAGd,OACE,sBAAK1B,UAAU,SAAf,UACE,qGACA,8GCJC,SAAS2B,IAChB,IAAMhC,EAAWC,cACX5C,EAAU0C,YAAYF,GACtBoB,EAAQlB,YAAYJ,GAExB,OACE,qBAAKU,UAAU,UAAf,SACMY,EAUE5D,EAAQiD,KAAI,SAACnB,EAAMoB,GAAP,OACZ,sBAAKF,UAAS,iBAAYlB,EAAK7B,GAAK,GAApC,UACI,+BAAKD,EAAQkD,GAAKhD,KAAlB,OACA,kEAAYF,EAAQkD,GAAK/C,YAFiB2B,EAAK7B,OAVnDD,EAAQiD,KAAI,SAACnB,EAAMoB,GAAP,OACZ,sBAAKF,UAAS,iBAAYlB,EAAK7B,GAAK,GAApC,UACI,wBAAOoE,QAASnB,EAAhB,gHAAyCpB,EAAK7B,GAAK,EAAnD,QACA,uBAAOA,GAAIiD,EACPoB,SAAU,SAACxB,GAAD,OAAOH,EAASX,EAAW,CAAC/B,GAAI6C,EAAEC,OAAO9C,GAAIU,MAAOmC,EAAEC,OAAOpC,UACvE4D,KAAK,OACL5D,MAAOX,EAAQkD,GAAKhD,KACpB0E,YAAW,iBAAY9C,EAAK7B,GAAK,OANM6B,EAAK7B,S,MCSjD4E,MAdf,WACE,IAAM9E,EAAW2C,YAAYL,GAC7B,OACE,sBAAKW,UAAU,MAAf,UACE,wCACA,sBAAKA,UAAU,YAAf,UACE,cAACU,EAAD,IACC3D,EAAW,cAAC2E,EAAD,IAAY,cAACjC,EAAD,IACxB,cAACkC,EAAD,WCdKG,EAAQC,YAAe,CAClCC,QAAS,CACPxF,QAASyF,KCGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.a4aa2f41.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport bee from './img/bee.png';\nimport butterfly from './img/butterfly.png';\nimport elephant from './img/elephant.png';\nimport fox from './img/fox.png';\nimport lion from './img/lion.png';\nimport octopus from './img/octopus.png';\nimport penguin from './img/penguin.png';\nimport snake from './img/snake.png';\nimport owl from './img/owl.png';\n\n\n// Array(N).fill(null).map(() => Array(N))\nconst arrImg = [bee, butterfly, elephant, fox, lion, octopus, penguin, snake, owl];\n//  console.log(arrImg);\n\nconst size = 4;\nconst initialState = {\n  counter: 0, \n  cells: Array.from(Array(size), () => new Array(size)), \n  startGame: false, finishGame: false, \n  setTime: 60, \n  isLosing: false,\n  players: [{id: 0, name: \"Player 1\", points: 0, victory: false}, {id: 1, name: \"Player 2\", points: 0, victory: false}],\n  countPlayers: 0\n};\n\nlet val = 1;\nfor(let i = 0; i< initialState.cells.length; i++) {\n  \n  for (let j = 0; j< initialState.cells[i].length; j++) {\n    if (val == size * (size / 2) + 1) {\n      val = 1;\n    }\n    initialState.cells[i][j] = {value: arrImg[val], visible: false};\n    val++;\n  }\n}\nfor(let j = 0; j < 20; j++) {\n  for(let i = 0; i< initialState.cells.length; i++) {\n    initialState.cells[i].sort(() => Math.random() - 0.5);\n    initialState.cells.sort(() => Math.random() - 0.5);\n  }\n}\n\n\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addElem: (state, action) => {\n      \n      let i = Math.trunc(action.payload / size);\n      let j = action.payload - Math.trunc(action.payload / size) * size;\n\n      state.cells[i][j].visible = true;\n        if (state.counter % 2 == 0) {\n          state.previusValue = {i: i, j: j};\n          \n        } else {\n          state.countPlayers++\n          if(state.cells[state.previusValue.i][state.previusValue.j].value != state.cells[i][j].value) {\n            state.cells[state.previusValue.i][state.previusValue.j].visible = false;\n            state.cells[i][j].visible = false;\n          } else {\n            if(state.countPlayers % 2 != 0) {\n              state.players[0].points++;\n            } else {\n              state.players[1].points++;\n            }\n          }\n        }\n        state.counter++;\n    },\n\n    addTime: (state, action) => {\n      if(state.counter > 0) state.startGame = true;\n      state.time = action.payload;\n    },\n\n    setTime: (state, action) => {\n     state.setTime = action.payload;\n    },\n\n    getFinish: (state) => {\n      state.finishGame = state.cells.every(cell => {\n        return cell.every(item => {\n          return item.visible\n        })\n      })\n    },\n\n    getLosing: (state, action) => {\n      state.isLosing = action.payload\n    },\n\n    setPlayers: (state, action) => {\n      state.players[action.payload.id].name = action.payload.value\n    },\n\n    \n  },\n});\n\nexport const { addElem, addTime, getFinish, setTime, getLosing, setPlayers } = counterSlice.actions;\nexport const selectCells = (state) => state.counter.cells.flat();\nexport const selectSetTime = (state) => state.counter.setTime;\nexport const selectLosing = (state) => state.counter.isLosing;\nexport const selectStartGame = (state) => state.counter.startGame;\nexport const selectFinishGame = (state) => state.counter.finishGame;\nexport const selectPlayers = (state) => state.counter.players;\nexport default counterSlice.reducer;\n\n \n","export default __webpack_public_path__ + \"static/media/bee.972fd774.png\";","export default __webpack_public_path__ + \"static/media/butterfly.2fd4e3b2.png\";","export default __webpack_public_path__ + \"static/media/elephant.a28b3f86.png\";","export default __webpack_public_path__ + \"static/media/fox.cc371092.png\";","export default __webpack_public_path__ + \"static/media/lion.8ae4d5f0.png\";","export default __webpack_public_path__ + \"static/media/octopus.4cc4c7dd.png\";","export default __webpack_public_path__ + \"static/media/penguin.614655e7.png\";","export default __webpack_public_path__ + \"static/media/snake.6fb4bca3.png\";","export default __webpack_public_path__ + \"static/media/owl.c4c54698.png\";","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  addElem,  selectCells, getFinish } from './counterSlice';\n\nexport function Counter() {\n  const cells = useSelector(selectCells);\n  // const arrCells = cells.flat();\n  // const oneDimArr = cells.reduce((a, b) => [...a, ...b], []);\n  // console.log(cells);\n  \n  const dispatch = useDispatch();\n  const handleClick = (e) => {\n    dispatch(addElem(e.target.id));\n    dispatch(getFinish());\n  }\n\n  return (\n    <>\n      <div className=\"memory\" >\n      {cells.map((item, idx)=> \n        <button \n          style={{width: `${100/4}%`, transition: \"all 0.3s\"}} \n          className=\"cell\" \n          id={idx} \n          key={idx} \n          onClick={handleClick} \n          disabled={item.visible}\n          >\n            {/* <img src={`./img/${item.value}.png`} alt=\"\" key={`img-${item.idx}`}></img> */}\n            {!item.visible ? \"\" : <img src={item.value} alt=\"\" key={`img-${item.idx}`} width=\"80%\"></img>}\n        </button>)} \n\n        \n      </div>\n   \n    </>\n   );\n}","import React, { useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTime, setTime, getLosing, selectSetTime, selectStartGame, selectFinishGame} from './counterSlice';\r\n\r\nexport function Time() {\r\n  const dispatch = useDispatch();\r\n  const setTimeAction = useSelector(selectSetTime);\r\n  const start = useSelector(selectStartGame);\r\n  const finish = useSelector(selectFinishGame);\r\n  let [count, setCount] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n    dispatch(addTime(count));      \r\n    start ? setCount(count + 1) : setCount(0) ;\r\n    }, 1000);\r\n\r\n    if (finish) clearInterval(interval); \r\n    if (count == setTimeAction){\r\n        dispatch(getLosing(true)); \r\n        clearInterval(interval);  \r\n    } \r\n\r\n    return () => clearInterval(interval); \r\n  });\r\n  \r\n  \r\n  return (\r\n    <div className=\"time\"  >\r\n        <div className=\"getTime\">{count}</div>   \r\n        <div className=\"setTime\">\r\n            {start ? \r\n            <div className=\"setTime-item\"><p>Время прохождения: </p><p className=\"setTime-item-p\">{setTimeAction}</p></div> : \r\n            <div className=\"setTime-item\">\r\n                <label htmlFor=\"settime\">Установите время: </label>\r\n                <input id=\"settime\" onChange={(e) => dispatch(setTime(e.target.value))} type=\"number\" min=\"5\" max=\"600\" value={setTimeAction}/>\r\n            </div>}\r\n            \r\n        </div>       \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport function Losing() {\r\n \r\n  \r\n  return (\r\n    <div className=\"losing\">\r\n      <h3>Вы проиграли</h3>\r\n      <h4>Время истекло</h4>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { setPlayers, selectPlayers, selectStartGame }  from './counterSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nexport function Players() {\r\nconst dispatch = useDispatch();    \r\nconst players = useSelector(selectPlayers);  \r\nconst start = useSelector(selectStartGame);  \r\n  \r\n  return (\r\n    <div className=\"players\">\r\n        {!start ?\r\n            players.map((item, idx) => \r\n            <div className={`player-${item.id + 1}`}  key={item.id}>\r\n                <label htmlFor={idx}>Введите имя ИГРОКА-{item.id + 1}: </label>\r\n                <input id={idx} \r\n                    onChange={(e) => dispatch(setPlayers({id: e.target.id, value: e.target.value}))} \r\n                    type=\"text\" \r\n                    value={players[idx].name} \r\n                    placeholder={`Player ${item.id + 1}`}/>\r\n            </div>) :\r\n            players.map((item, idx) => \r\n            <div className={`player-${item.id + 1}`} key={item.id}>\r\n                <h3>{players[idx].name}:</h3>\r\n                <h3>Очков: {players[idx].points}</h3>\r\n            </div>)    \r\n}\r\n\r\n\r\n\r\n     \r\n    </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Counter } from './features/counter/Counter';\nimport { Time } from './features/counter/Time';\nimport { Losing } from './features/counter/Losing';\nimport {Players } from './features/counter/Players';\nimport { useSelector } from 'react-redux';\nimport { selectLosing } from './features/counter/counterSlice';\nimport './App.css';\n\nfunction App() {\n  const isLosing = useSelector(selectLosing);\n  return (\n    <div className=\"App\">\n      <h2>Memory</h2>\n      <div className=\"container\">\n        <Time/>\n        {isLosing ? <Losing/> : <Counter />}\n        <Players />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}