{"version":3,"sources":["features/counter/counterSlice.js","features/counter/img/bee.png","features/counter/img/butterfly.png","features/counter/img/elephant.png","features/counter/img/fox.png","features/counter/img/lion.png","features/counter/img/octopus.png","features/counter/img/penguin.png","features/counter/img/snake.png","features/counter/img/owl.png","features/counter/Counter.js","App.js","app/store.js","index.js"],"names":["arrImg","console","log","initialState","counter","cells","Array","from","val","i","length","j","size","value","visible","sort","Math","random","counterSlice","createSlice","name","reducers","addElem","state","action","trunc","payload","previusValue","actions","selectCells","flat","Counter","useSelector","dispatch","useDispatch","handleClick","e","target","id","className","map","item","idx","style","width","transition","onClick","disabled","src","alt","App","store","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAcMA,EAAS,CCdA,IAA0B,gCCA1B,IAA0B,sCCA1B,IAA0B,qCCA1B,IAA0B,gCCA1B,IAA0B,iCCA1B,IAA0B,oCCA1B,IAA0B,oCCA1B,IAA0B,kCCA1B,IAA0B,iCTexCC,QAAQC,IAAIF,GAMb,IAJA,IACMG,EAAe,CAACC,QAAS,EAAGC,MAAOC,MAAMC,KAAKD,MADvC,IACoD,kBAAM,IAAIA,MAD9D,OAGTE,EAAM,EACFC,EAAI,EAAGA,EAAGN,EAAaE,MAAMK,OAAQD,IAE3C,IAAK,IAAIE,EAAI,EAAGA,EAAGR,EAAaE,MAAMI,GAAGC,OAAQC,IACpCC,GAAPJ,IACFA,EAAM,GAERL,EAAaE,MAAMI,GAAGE,GAAK,CAACE,MAAOb,EAAOQ,GAAMM,SAAS,GACzDN,IAGJ,IAAI,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IACrB,IAAI,IAAIF,EAAI,EAAGA,EAAGN,EAAaE,MAAMK,OAAQD,IAC3CN,EAAaE,MAAMI,GAAGM,MAAK,kBAAMC,KAAKC,SAAW,MACjDd,EAAaE,MAAMU,MAAK,kBAAMC,KAAKC,SAAW,MAI3C,IAAMC,EAAeC,YAAY,CACtCC,KAAM,UACNjB,eACAkB,SAAU,CACRC,QAAS,SAACC,EAAOC,GAEf,IAAIf,EAAIO,KAAKS,MAAMD,EAAOE,QA3BnB,GA4BHf,EAAIa,EAAOE,QA5BR,EA4BkBV,KAAKS,MAAMD,EAAOE,QA5BpC,GA8BPH,EAAMlB,MAAMI,GAAGE,GAAGG,SAAU,EACtBS,EAAMnB,QAAU,GAAK,EACvBmB,EAAMI,aAAe,CAAClB,EAAGA,EAAGE,EAAGA,GAG5BY,EAAMlB,MAAMkB,EAAMI,aAAalB,GAAGc,EAAMI,aAAahB,GAAGE,OAASU,EAAMlB,MAAMI,GAAGE,GAAGE,QACpFU,EAAMlB,MAAMkB,EAAMI,aAAalB,GAAGc,EAAMI,aAAahB,GAAGG,SAAU,EAClES,EAAMlB,MAAMI,GAAGE,GAAGG,SAAU,GAGhCS,EAAMnB,cAKCkB,EAAYJ,EAAaU,QAAzBN,QACFO,EAAc,SAACN,GAAD,OAAWA,EAAMnB,QAAQC,MAAMyB,QAC3CZ,IAAf,Q,OU5DO,SAASa,IACd,IAAM1B,EAAQ2B,YAAYH,GAGzB5B,QAAQC,IAAIG,GAEb,IAAM4B,EAAWC,cACXC,EAAc,SAACC,GACnBH,EAASX,EAAQc,EAAEC,OAAOC,MAG5B,OACE,mCACE,qBAAKC,UAAU,SAAf,SACClC,EAAMmC,KAAI,SAACC,EAAMC,GAAP,OACT,wBACEC,MAAO,CAACC,MAAM,GAAD,OAAK,GAAL,KAAeC,WAAY,YACxCN,UAAU,OACVD,GAAII,EAEJI,QAASX,EACTY,SAAUN,EAAK3B,QANjB,SASM2B,EAAK3B,QAAe,qBAAKkC,IAAKP,EAAK5B,MAAOoC,IAAI,GAA2BL,MAAM,OAA3D,cAAyCH,EAAKC,MAAnD,IALdA,U,MCRAQ,MAXf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wCACA,cAACR,EAAD,UCNKoB,EAAQC,YAAe,CAClCC,QAAS,CACPjD,QAASkD,KCGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.02ab0a2b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport bee from './img/bee.png';\nimport butterfly from './img/butterfly.png';\nimport elephant from './img/elephant.png';\nimport fox from './img/fox.png';\nimport lion from './img/lion.png';\nimport octopus from './img/octopus.png';\nimport penguin from './img/penguin.png';\nimport snake from './img/snake.png';\nimport owl from './img/owl.png';\n\n\n// Array(N).fill(null).map(() => Array(N))\nconst arrImg = [bee, butterfly, elephant, fox, lion, octopus, penguin, snake, owl];\n console.log(arrImg);\n\nconst size = 4;\nconst initialState = {counter: 1, cells: Array.from(Array(size), () => new Array(size))};\n\nlet val = 1;\nfor(let i = 0; i< initialState.cells.length; i++) {\n  \n  for (let j = 0; j< initialState.cells[i].length; j++) {\n    if (val == size * (size / 2) + 1) {\n      val = 1;\n    }\n    initialState.cells[i][j] = {value: arrImg[val], visible: false};\n    val++;\n  }\n}\nfor(let j = 0; j < 20; j++) {\n  for(let i = 0; i< initialState.cells.length; i++) {\n    initialState.cells[i].sort(() => Math.random() - 0.5);\n    initialState.cells.sort(() => Math.random() - 0.5);\n  }\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addElem: (state, action) => {\n      \n      let i = Math.trunc(action.payload / size);\n      let j = action.payload - Math.trunc(action.payload / size) * size;\n\n      state.cells[i][j].visible = true;\n        if (state.counter % 2 != 0) {\n          state.previusValue = {i: i, j: j};\n          \n        } else {\n          if(state.cells[state.previusValue.i][state.previusValue.j].value != state.cells[i][j].value) {\n            state.cells[state.previusValue.i][state.previusValue.j].visible = false;\n            state.cells[i][j].visible = false;\n          }\n        }\n        state.counter++;\n    },\n  },\n});\n\nexport const { addElem } = counterSlice.actions;\nexport const selectCells = (state) => state.counter.cells.flat();\nexport default counterSlice.reducer;\n\n \n","export default __webpack_public_path__ + \"static/media/bee.972fd774.png\";","export default __webpack_public_path__ + \"static/media/butterfly.2fd4e3b2.png\";","export default __webpack_public_path__ + \"static/media/elephant.a28b3f86.png\";","export default __webpack_public_path__ + \"static/media/fox.cc371092.png\";","export default __webpack_public_path__ + \"static/media/lion.8ae4d5f0.png\";","export default __webpack_public_path__ + \"static/media/octopus.4cc4c7dd.png\";","export default __webpack_public_path__ + \"static/media/penguin.614655e7.png\";","export default __webpack_public_path__ + \"static/media/snake.6fb4bca3.png\";","export default __webpack_public_path__ + \"static/media/owl.c4c54698.png\";","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  addElem,  selectCells } from './counterSlice';\n\nexport function Counter() {\n  const cells = useSelector(selectCells);\n  // const arrCells = cells.flat();\n  // const oneDimArr = cells.reduce((a, b) => [...a, ...b], []);\n   console.log(cells);\n  \n  const dispatch = useDispatch();\n  const handleClick = (e) => {\n    dispatch(addElem(e.target.id));\n  }\n\n  return (\n    <>\n      <div className=\"memory\" >\n      {cells.map((item, idx)=> \n        <button \n          style={{width: `${100/4}%`, transition: \"all 0.3s\"}} \n          className=\"cell\" \n          id={idx} \n          key={idx} \n          onClick={handleClick} \n          disabled={item.visible}\n          >\n            {/* <img src={`./img/${item.value}.png`} alt=\"\" key={`img-${item.idx}`}></img> */}\n            {!item.visible ? \"\" : <img src={item.value} alt=\"\" key={`img-${item.idx}`} width=\"80%\"></img>}\n        </button>)} \n\n        \n      </div>\n   \n    </>\n   );\n}","import React from 'react';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Memory</h2>\n        <Counter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}