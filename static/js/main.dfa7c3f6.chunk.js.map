{"version":3,"sources":["features/counter/img/bee.png","features/counter/img/butterfly.png","features/counter/img/elephant.png","features/counter/img/fox.png","features/counter/img/lion.png","features/counter/img/octopus.png","features/counter/img/penguin.png","features/counter/img/snake.png","features/counter/img/owl.png","features/counter/audio/everClick.mp3","features/counter/audio/yes.mp3","features/counter/audio/no.mp3","features/counter/audio/victory.mp3","features/counter/audio/losing.mp3","features/counter/counterSlice.js","features/counter/Counter.js","features/counter/Time.js","features/counter/MountChange.js","features/counter/Statistic.js","features/counter/Losing.js","features/counter/Players.js","features/counter/Finish.js","App.js","app/store.js","index.js"],"names":["arrImg","bee","butterfly","elephant","fox","lion","octopus","penguin","snake","owl","sort","Math","random","initialState","counter","size","startGame","finishGame","setTime","isLosing","players","id","name","points","victory","countPlayers","movePlayer","cells","hidden","draw","audio","audioEverClick","soundPlay","src","Howl","play","counterSlice","createSlice","reducers","addCells","state","action","Number","payload","Array","from","val","i","length","j","value","visible","addElem","trunc","previusValue","no","yes","addTime","time","getFinish","every","cell","item","finish","getLosing","losing","setPlayers","setHidden","actions","setSize","selectCells","flat","selectSetTime","selectLosing","selectStartGame","selectFinishGame","selectPlayers","selectMovePlayer","selectSize","selectHidden","selectDraw","Counter","dispatch","useDispatch","useSelector","handleClick","e","target","className","style","display","map","idx","width","height","onClick","disabled","alt","Time","setTimeAction","start","useState","count","setCount","useEffect","interval","setInterval","clearInterval","htmlFor","onChange","type","min","max","MountChange","handleChange","Statistic","Losing","Players","player","placeholder","Finish","App","isFinish","store","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfa7c3f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bee.972fd774.png\";","export default __webpack_public_path__ + \"static/media/butterfly.2fd4e3b2.png\";","export default __webpack_public_path__ + \"static/media/elephant.a28b3f86.png\";","export default __webpack_public_path__ + \"static/media/fox.cc371092.png\";","export default __webpack_public_path__ + \"static/media/lion.8ae4d5f0.png\";","export default __webpack_public_path__ + \"static/media/octopus.4cc4c7dd.png\";","export default __webpack_public_path__ + \"static/media/penguin.614655e7.png\";","export default __webpack_public_path__ + \"static/media/snake.6fb4bca3.png\";","export default __webpack_public_path__ + \"static/media/owl.c4c54698.png\";","export default __webpack_public_path__ + \"static/media/everClick.b94c632a.mp3\";","export default __webpack_public_path__ + \"static/media/yes.16d48ba3.mp3\";","export default __webpack_public_path__ + \"static/media/no.f9593116.mp3\";","export default __webpack_public_path__ + \"static/media/victory.13191421.mp3\";","export default __webpack_public_path__ + \"static/media/losing.7ca97ea0.mp3\";","import { createSlice } from '@reduxjs/toolkit';\nimport {Howl, Howler} from 'howler';\n\nimport bee from './img/bee.png';\nimport butterfly from './img/butterfly.png';\nimport elephant from './img/elephant.png';\nimport fox from './img/fox.png';\nimport lion from './img/lion.png';\nimport octopus from './img/octopus.png';\nimport penguin from './img/penguin.png';\nimport snake from './img/snake.png';\nimport owl from './img/owl.png';\n\nimport audioEverClick from './audio/everClick.mp3';\nimport yes from './audio/yes.mp3';\nimport no from './audio/no.mp3';\nimport finish from './audio/victory.mp3';\nimport losing  from './audio/losing.mp3';\n\n\nconst imgUrl = [bee, butterfly, elephant, fox, lion, octopus, penguin, snake, owl];\n// const arrAudio = [ no, audioEverClick, yes ];\nconst arrImg = imgUrl.sort(()=> 0.5 - Math.random());  \n\n\nconst initialState = {\n  counter: 0, \n  size: 4, \n  startGame: false, \n  finishGame: false, \n  setTime: 60, \n  isLosing: false,\n  players: [{id: 0, name: \"Player 1\", points: 0, victory: false}, {id: 1, name: \"Player 2\", points: 0, victory: false}],\n  countPlayers: 0,\n  movePlayer: \"\",\n  cells: [],\n  hidden: true,\n  draw: false,\n  audio: audioEverClick\n\n};\n\nconst soundPlay = (src) => {\n              const sound = new Howl({src});\n              sound.play();\n            }\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addCells: (state, action) => {\n      state.size = Number(action.payload);\n      state.cells = Array.from(Array(state.size), () => new Array(state.size));\n      \n      // console.log( state.cells);\n      let val = 0;\n      for(let i = 0; i< state.cells.length; i++) {\n        for (let j = 0; j< state.cells[i].length; j++) {\n          if (val == 9 || val == state.size * state.size / 2) {\n            val = 0;\n          }\n          state.cells[i][j] = {value: arrImg[val], visible: false};\n          val++;\n        }\n      }\n      for(let j = 0; j < 20; j++) {\n        for(let i = 0; i< state.cells.length; i++) {\n          state.cells[i].sort(() => Math.random() - 0.5);\n          state.cells.sort(() => Math.random() - 0.5);\n        }\n      }\n\n    },\n\n    addElem: (state, action) => {\n     \n      let i = Math.trunc(action.payload / state.size);\n      let j = action.payload - Math.trunc(action.payload / state.size) * state.size;\n\n      state.cells[i][j].visible = true;\n      \n        if (state.counter % 2 == 0) {\n          state.previusValue = {i: i, j: j};\n          soundPlay(audioEverClick);\n        } else {\n          if(state.cells[state.previusValue.i][state.previusValue.j].value != state.cells[i][j].value) {\n            soundPlay(no);\n            state.cells[state.previusValue.i][state.previusValue.j].visible = false;\n            state.cells[i][j].visible = false;\n            state.countPlayers++;\n          } else {\n            if(state.countPlayers % 2 == 0) {\n              state.players[0].points++;\n            } else {\n              state.players[1].points++;\n            }\n            soundPlay(yes);\n          }\n        }\n\n        if(state.countPlayers % 2 == 0) {\n          state.movePlayer = state.players[0].name;\n        } else {\n          state.movePlayer = state.players[1].name;\n        }\n        state.counter++;\n    },\n\n    addTime: (state, action) => {\n      if(state.counter > 0) state.startGame = true;\n      state.time = action.payload;\n    },\n\n    setTime: (state, action) => {\n     state.setTime = action.payload;\n    },\n\n    getFinish: (state) => {\n      state.finishGame = state.cells.every(cell => {\n        return cell.every(item => {\n          return item.visible\n        })\n      })\n\n      if(state.players[0].points == state.players[1].points) {\n        state.draw = true;\n      } else {\n        state.draw = false;\n      }\n\n      if(state.finishGame) {\n        soundPlay(finish);\n      }       \n    },\n\n    getLosing: (state, action) => {\n      state.isLosing = action.payload;\n      soundPlay(losing);\n    },\n\n    setPlayers: (state, action) => {\n      state.players[action.payload.id].name = action.payload.value\n    },\n\n    setHidden: (state, action) => {\n      state.hidden = action.payload;\n    },\n  },\n});\n\nexport const { addCells, addElem, addTime, getFinish, setTime, getLosing, setPlayers, setSize, setHidden } = counterSlice.actions;\nexport const selectCells = (state) => state.counter.cells.flat();\nexport const selectSetTime = (state) => state.counter.setTime;\nexport const selectLosing = (state) => state.counter.isLosing;\nexport const selectStartGame = (state) => state.counter.startGame;\nexport const selectFinishGame = (state) => state.counter.finishGame;\nexport const selectPlayers = (state) => state.counter.players;\nexport const selectMovePlayer = (state) => state.counter.movePlayer;\nexport const selectSize = (state) => state.counter.size;\nexport const selectHidden = (state) => state.counter.hidden;\nexport const selectDraw = (state) => state.counter.draw;\n\nexport default counterSlice.reducer;\n\n \n//  if(state.finishGame || state.isLosing) {\n//         state.players.sort(function(a,b) {\n//           if(a.points > b.points) {\n//             return 1;\n//           }\n//           if(a.points < b.points) {\n//             return -1;\n//           }\n//           return 0;\n//         });\n//       }","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  addElem,  selectCells, getFinish, selectSize, selectHidden } from './counterSlice';\n\n\nexport function Counter() {\n  const dispatch = useDispatch();\n  const cells = useSelector(selectCells);\n  const size = useSelector(selectSize);\n  const hidden = useSelector(selectHidden);\n      \n  // const arrCells = cells.flat();\n  // const oneDimArr = cells.reduce((a, b) => [...a, ...b], []);\n  // console.log(cells);\n      \n  const handleClick = (e) => {\n    dispatch(addElem(e.target.id));\n    dispatch(getFinish());\n  }\n\n  return (\n    <>\n      <div className=\"memory\" style={{display: hidden ? \"none\" : \"flex\"}}>\n        {cells.map((item, idx)=> \n          <button \n            style={{width: `${100/size}%`, height: `${100/size*5}px`}} \n            className=\"cell\" \n            id={idx} \n            key={idx} \n            onClick={handleClick} \n            disabled={item.visible}>\n            {!item.visible ? \"\" : <img  src={item.value} alt=\"\" key={`img-${item.idx}`} width=\"80%\"></img>}\n          </button>)} \n      </div>\n    </>\n   );\n}","import React, { useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTime, setTime, getLosing, selectSetTime, selectStartGame, selectFinishGame} from './counterSlice';\r\n\r\nexport function Time() {\r\n  const dispatch = useDispatch();\r\n  const setTimeAction = useSelector(selectSetTime);\r\n  const start = useSelector(selectStartGame);\r\n  const finish = useSelector(selectFinishGame);\r\n  let [count, setCount] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n    dispatch(addTime(count));      \r\n    start ? setCount(count + 1) : setCount(0) ;\r\n    }, 1000);\r\n\r\n    if (finish) clearInterval(interval); \r\n    if (count == setTimeAction && setTimeAction != \"\"){\r\n        dispatch(getLosing(true)); \r\n        clearInterval(interval);  \r\n    } \r\n\r\n    return () => clearInterval(interval); \r\n  });\r\n   \r\n  return (\r\n    <div className=\"time\"  >\r\n        {start ? \r\n            <>\r\n                <div className=\"getTime\"><span>Время игры:</span>{count}</div>   \r\n                <div className=\"setTime\">\r\n                    <div className=\"setTime-item\"><p className=\"setTime-item-p\"><span>Лимит времени:</span>{setTimeAction}</p></div> \r\n                </div>  \r\n            </> : \r\n            <div className=\"setTime-item\">\r\n                <label htmlFor=\"settime\">Установите время: </label>\r\n                <input id=\"settime\" onChange={(e) => dispatch(setTime(e.target.value))} type=\"number\" min=\"5\" max=\"600\" value={setTimeAction}/>\r\n            </div>\r\n        }\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { addCells, setHidden, selectFinishGame, selectStartGame }  from './counterSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport function MountChange() {\r\n  const dispatch = useDispatch();\r\n  const finish = useSelector(selectFinishGame);\r\n  const start = useSelector(selectStartGame);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(addCells(e.target.value));\r\n    dispatch(setHidden(false));\r\n  }\r\n  return (\r\n    <div className=\"mount-change\" style={{display: finish || start ? \"none\" : \"flex\"}}>\r\n        <div className=\"form_toggle\">\r\n          <div className=\"form_toggle-item item-1\">\r\n            <input onClick={handleChange} id=\"fid-1\" type=\"radio\" name=\"radio\" value=\"2\"/>\r\n            <label htmlFor=\"fid-1\">2x2</label>\r\n          </div>\r\n          <div className=\"form_toggle-item item-2\">\r\n            <input onClick={handleChange} id=\"fid-2\" type=\"radio\" name=\"radio\" value=\"4\"/>\r\n            <label htmlFor=\"fid-2\">4x4</label>\r\n          </div>\r\n          <div className=\"form_toggle-item item-3\">\r\n            <input onClick={handleChange} id=\"fid-3\" type=\"radio\" name=\"radio\" value=\"6\"/>\r\n            <label htmlFor=\"fid-3\">6x6</label>\r\n          </div>\r\n        </div>              \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { selectPlayers }  from './counterSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function Statistic() {\r\nconst players = useSelector(selectPlayers); \r\n\r\n  return (\r\n    <div className=\"statistic\">\r\n         {players.map((item, idx) => \r\n         <div className=\"statistic-item\" key={idx}>\r\n             <p className=\"number\">{idx+1}</p>\r\n             <p className=\"name\">{item.name}</p>\r\n             <p className=\"points\">{item.points}</p>\r\n         </div>\r\n         )}  \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Statistic} from './Statistic';\r\nexport function Losing() {\r\n   \r\n  return (\r\n    <div className=\"losing\">\r\n      <h3>Вы проиграли</h3>\r\n      <h4>Время истекло</h4>\r\n      <Statistic/>\r\n      \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { setPlayers, selectPlayers, selectStartGame, selectMovePlayer }  from './counterSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nexport function Players() {\r\nconst dispatch = useDispatch();    \r\nconst players = useSelector(selectPlayers);  \r\nconst start = useSelector(selectStartGame);  \r\nconst player = useSelector(selectMovePlayer);\r\n \r\nreturn (\r\n        <div className=\"players\">\r\n            {!start ?\r\n                players.map((item, idx) => \r\n                <div className={`player-${item.id + 1}`}  key={item.id}>\r\n                    <label htmlFor={idx}>Введите имя ИГРОК №{item.id + 1}: </label>\r\n                    <input id={idx} \r\n                        onChange={(e) => dispatch(setPlayers({id: e.target.id, value: e.target.value}))} \r\n                        type=\"text\" \r\n                        value={players[idx].name} \r\n                        placeholder={`Player ${item.id + 1}`}/>\r\n                </div>) :\r\n                <div className=\"outPlayers\">\r\n                    <h1 className=\"toPlayer\">{player}</h1>\r\n                    <div className=\"outPlayers-item\">\r\n                        {players.map((item, idx) => \r\n                            <div className={`player-${item.id + 1}`} key={item.id}>\r\n                                <p>{players[idx].name}:</p>\r\n                                <p>Очков: <span className=\"points\">{players[idx].points}</span></p>\r\n                            </div>)} \r\n                    </div>   \r\n                </div>      \r\n            }\r\n        </div>\r\n    \r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Statistic} from './Statistic';\r\nimport { selectDraw }  from './counterSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function Finish() {\r\nconst draw = useSelector(selectDraw);   \r\n  return (\r\n    <div className=\"finish\">\r\n      {draw ? <h3>Ничья!</h3> : <h3>Вы выйграли!</h3>}\r\n      <Statistic/>\r\n      \r\n    </div>\r\n    );\r\n}","import React from 'react';\nimport { Counter } from './features/counter/Counter';\nimport { Time } from './features/counter/Time';\nimport { MountChange  } from './features/counter/MountChange';\nimport { Losing } from './features/counter/Losing';\nimport { Players } from './features/counter/Players';\nimport { Finish } from './features/counter/Finish';\nimport { useSelector } from 'react-redux';\nimport { selectLosing, selectFinishGame } from './features/counter/counterSlice';\nimport './App.css';\n\nfunction App() {\n  const isLosing = useSelector(selectLosing);\n  const isFinish = useSelector(selectFinishGame);\n  \n  return (\n    <div className=\"App\">\n      <h2>Memory</h2>\n      <div className=\"container\">\n        <div className=\"setting\">\n          <MountChange/>\n          <Time/>\n        </div>\n        \n        {isLosing ? <Losing/> : isFinish ? <Finish/> : <Counter />}\n        {isFinish || isLosing? <div className=\"prop\"></div> : <Players />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}