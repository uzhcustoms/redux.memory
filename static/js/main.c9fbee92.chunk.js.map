{"version":3,"sources":["features/counter/img/bee.png","features/counter/img/butterfly.png","features/counter/img/elephant.png","features/counter/img/fox.png","features/counter/img/lion.png","features/counter/img/octopus.png","features/counter/img/penguin.png","features/counter/img/snake.png","features/counter/img/owl.png","features/counter/audio/everClick.mp3","features/counter/audio/yes.mp3","features/counter/audio/no.mp3","features/counter/audio/victory.mp3","features/counter/audio/losing.mp3","features/counter/counterSlice.js","features/counter/Counter.js","features/counter/Time.js","features/counter/MountChange.js","features/counter/Theme.js","features/counter/Statistic.js","features/counter/Losing.js","features/counter/Players.js","features/counter/Finish.js","features/counter/RefreshPage.js","App.js","app/store.js","index.js"],"names":["arrImg","bee","butterfly","elephant","fox","lion","octopus","penguin","snake","owl","sort","Math","random","initialState","counter","size","startGame","finishGame","setTime","isLosing","players","id","name","points","victory","mount","countPlayers","movePlayer","cells","hidden","draw","audio","audioEverClick","themeLight","soundPlay","src","Howl","play","counterSlice","createSlice","reducers","addCells","state","action","Number","payload","Array","from","val","i","length","j","value","visible","showElem","trunc","addElem","previusValue","no","yes","addTime","time","getFinish","every","cell","item","finish","getLosing","losing","setPlayers","setHidden","setTheme","actions","setSize","selectCells","flat","selectSetTime","selectLosing","selectStartGame","selectFinishGame","selectPlayers","selectMovePlayer","selectSize","selectHidden","selectDraw","selectThemeLight","Counter","dispatch","useDispatch","useSelector","handleClick","e","target","setTimeout","className","style","display","map","idx","width","height","onClick","disabled","alt","Time","setTimeAction","start","useState","count","setCount","useEffect","interval","setInterval","clearInterval","htmlFor","onChange","type","min","max","color","MountChange","handleChange","Theme","checked","Statistic","arr","slice","a","b","parseInt","Losing","margin","Players","player","placeholder","Finish","Refresh","isFinish","window","location","reload","backgroundColor","App","store","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9fbee92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bee.972fd774.png\";","export default __webpack_public_path__ + \"static/media/butterfly.2fd4e3b2.png\";","export default __webpack_public_path__ + \"static/media/elephant.a28b3f86.png\";","export default __webpack_public_path__ + \"static/media/fox.cc371092.png\";","export default __webpack_public_path__ + \"static/media/lion.8ae4d5f0.png\";","export default __webpack_public_path__ + \"static/media/octopus.4cc4c7dd.png\";","export default __webpack_public_path__ + \"static/media/penguin.614655e7.png\";","export default __webpack_public_path__ + \"static/media/snake.6fb4bca3.png\";","export default __webpack_public_path__ + \"static/media/owl.c4c54698.png\";","export default __webpack_public_path__ + \"static/media/everClick.b94c632a.mp3\";","export default __webpack_public_path__ + \"static/media/yes.16d48ba3.mp3\";","export default __webpack_public_path__ + \"static/media/no.f9593116.mp3\";","export default __webpack_public_path__ + \"static/media/victory.13191421.mp3\";","export default __webpack_public_path__ + \"static/media/losing.7ca97ea0.mp3\";","import { createSlice } from '@reduxjs/toolkit';\nimport {Howl, Howler} from 'howler';\n\nimport bee from './img/bee.png';\nimport butterfly from './img/butterfly.png';\nimport elephant from './img/elephant.png';\nimport fox from './img/fox.png';\nimport lion from './img/lion.png';\nimport octopus from './img/octopus.png';\nimport penguin from './img/penguin.png';\nimport snake from './img/snake.png';\nimport owl from './img/owl.png';\n\nimport audioEverClick from './audio/everClick.mp3';\nimport yes from './audio/yes.mp3';\nimport no from './audio/no.mp3';\nimport finish from './audio/victory.mp3';\nimport losing  from './audio/losing.mp3';\n\n\nconst imgUrl = [bee, butterfly, elephant, fox, lion, octopus, penguin, snake, owl];\nconst arrImg = imgUrl.sort(()=> 0.5 - Math.random());  \n\n\nconst initialState = {\n  counter: 0, \n  size: 4, \n  startGame: false, \n  finishGame: false, \n  setTime: 60, \n  isLosing: false,\n  players: [{id: 0, name: \"Player 1\", points: 0, victory: false, mount: 0}, {id: 1, name: \"Player 2\", points: 0, victory: false, mount: 0}],\n  countPlayers: 0,\n  movePlayer: \"\",\n  cells: [],\n  hidden: true,\n  draw: false,\n  audio: audioEverClick,\n  themeLight: true\n};\n\nconst soundPlay = (src) => {\n  const sound = new Howl({src});\n  sound.play();\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addCells: (state, action) => {\n      state.size = Number(action.payload);\n      state.cells = Array.from(Array(state.size), () => new Array(state.size));\n      \n      // console.log( state.cells);\n      let val = 0;\n      for(let i = 0; i< state.cells.length; i++) {\n        for (let j = 0; j< state.cells[i].length; j++) {\n          if (val == 9 || val == state.size * state.size / 2) {\n            val = 0;\n          }\n          state.cells[i][j] = {value: arrImg[val], visible: false};\n          val++;\n        }\n      }\n      for(let j = 0; j < 20; j++) {\n        for(let i = 0; i< state.cells.length; i++) {\n          state.cells[i].sort(() => Math.random() - 0.5);\n          state.cells.sort(() => Math.random() - 0.5);\n        }\n      }\n\n    },\n\n     showElem: (state, action) => {\n       let i = Math.trunc(action.payload / state.size);\n       let j = action.payload - Math.trunc(action.payload / state.size) * state.size;\n        state.cells[i][j].visible = true;\n     },\n\n    addElem: (state, action) => {\n     \n      let i = Math.trunc(action.payload / state.size);\n      let j = action.payload - Math.trunc(action.payload / state.size) * state.size;\n\n      state.cells[i][j].visible = true;\n      \n        if (state.counter % 2 == 0) {\n          state.previusValue = {i: i, j: j};\n          soundPlay(audioEverClick);\n          \n        } else {\n          if(state.countPlayers % 2 == 0) {\n            state.players[0].mount++;\n          } else {\n            state.players[1].mount++;\n          }  \n          if(state.cells[state.previusValue.i][state.previusValue.j].value != state.cells[i][j].value) {\n            soundPlay(no);\n            state.cells[state.previusValue.i][state.previusValue.j].visible = false;\n            state.cells[i][j].visible = false;\n            state.countPlayers++;\n          } else {\n            if(state.countPlayers % 2 == 0) {\n              state.players[0].points++;\n            } else {\n              state.players[1].points++;\n            }\n            if(!state.finishGame) soundPlay(yes);\n          }\n        }\n\n        if(state.countPlayers % 2 == 0) {\n          state.movePlayer = state.players[0].name;\n        } else {\n          state.movePlayer = state.players[1].name;\n        }\n        state.counter++;\n    },\n\n    addTime: (state, action) => {\n      if(state.counter > 0) state.startGame = true;\n      state.time = action.payload;\n    },\n\n    setTime: (state, action) => {\n     state.setTime = action.payload;\n    },\n\n    getFinish: (state) => {\n      state.finishGame = state.cells.every(cell => {\n        return cell.every(item => {\n          return item.visible\n        })\n      })\n\n      if(state.players[0].points == state.players[1].points) {\n        state.draw = true;\n      } else {\n        state.draw = false;\n      }\n\n      if(state.finishGame) {\n        soundPlay(finish);\n      }       \n    },\n\n    getLosing: (state, action) => {\n      state.isLosing = action.payload;\n      soundPlay(losing);\n    },\n\n    setPlayers: (state, action) => {\n      state.players[action.payload.id].name = action.payload.value\n    },\n\n    setHidden: (state, action) => {\n      state.hidden = action.payload;\n    },\n\n    setTheme: (state, action) => {\n      (action.payload == \"light\") ? state.themeLight = true : state.themeLight = false\n    },\n\n   \n  },\n});\n\nexport const { addCells, addElem, addTime, getFinish, setTime, getLosing, setPlayers, setSize, setHidden, setTheme, showElem } = counterSlice.actions;\nexport const selectCells = (state) => state.counter.cells.flat();\nexport const selectSetTime = (state) => state.counter.setTime;\nexport const selectLosing = (state) => state.counter.isLosing;\nexport const selectStartGame = (state) => state.counter.startGame;\nexport const selectFinishGame = (state) => state.counter.finishGame;\nexport const selectPlayers = (state) => state.counter.players;\nexport const selectMovePlayer = (state) => state.counter.movePlayer;\nexport const selectSize = (state) => state.counter.size;\nexport const selectHidden = (state) => state.counter.hidden;\nexport const selectDraw = (state) => state.counter.draw;\nexport const selectThemeLight = (state) => state.counter.themeLight;\nexport default counterSlice.reducer;\n\n ","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  addElem,  selectCells, getFinish, selectSize, selectHidden, showElem } from './counterSlice';\n\n\nexport function Counter() {\n  const dispatch = useDispatch();\n  const cells = useSelector(selectCells);\n  const size = useSelector(selectSize);\n  const hidden = useSelector(selectHidden);\n      \n  // const arrCells = cells.flat();\n  // const oneDimArr = cells.reduce((a, b) => [...a, ...b], []);\n  // console.log(cells);\n      \n  const handleClick = (e) => {\n   dispatch(showElem(e.target.id))\n    setTimeout(() => { dispatch(addElem(e.target.id));}, 300)\n    dispatch(getFinish());\n\n  }\n\n  return (\n    <>\n      <div className=\"memory\" style={{display: hidden ? \"none\" : \"flex\"}}>\n        {cells.map((item, idx)=> \n          <button \n            style={{width: `${100/size}%`, height: `${100/size*5}px`}} \n            className=\"cell\" \n            id={idx} \n            key={idx} \n            onClick={handleClick} \n            disabled={item.visible}>\n            {!item.visible ? \"\" : <img  src={item.value} alt=\"\" key={`img-${item.idx}`} width=\"80%\"></img>}\n          </button>)} \n      </div>\n    </>\n   );\n}","import React, { useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTime, setTime, getLosing, selectSetTime, selectStartGame, selectFinishGame, selectThemeLight} from './counterSlice';\r\n\r\nexport function Time() {\r\n  const dispatch = useDispatch();\r\n  const setTimeAction = useSelector(selectSetTime);\r\n  const start = useSelector(selectStartGame);\r\n  const finish = useSelector(selectFinishGame);\r\n  const themeLight = useSelector(selectThemeLight);\r\n  let [count, setCount] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n    dispatch(addTime(count));      \r\n    start ? setCount(count + 1) : setCount(0) ;\r\n    }, 1000);\r\n\r\n    if (finish) clearInterval(interval); \r\n    if (count == setTimeAction && setTimeAction != \"\" && setTimeAction != 0){\r\n        dispatch(getLosing(true)); \r\n        clearInterval(interval);  \r\n    } \r\n\r\n    return () => clearInterval(interval); \r\n  });\r\n   \r\n  return (\r\n    <div className=\"time\"  >\r\n        {start ? \r\n            <>\r\n                <div className=\"getTime\"><span>Время игры:</span>{count}</div>   \r\n                <div className=\"setTime\">\r\n                    <div className=\"setTime-item\"><p className=\"setTime-item-p\"><span>Лимит времени:</span>{setTimeAction}</p></div> \r\n                </div>  \r\n            </> : \r\n            <div className=\"setTime-item\">\r\n                <label htmlFor=\"settime\">Установите время: </label>\r\n                <input id=\"settime\" \r\n                    onChange={(e) => dispatch(setTime(e.target.value))} \r\n                    type=\"number\" \r\n                    min=\"5\" \r\n                    max=\"600\" \r\n                    value={setTimeAction}\r\n                    style={{color: !themeLight ? \"white\" : \"black\"}}/>\r\n            </div>\r\n        }\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { addCells, setHidden, selectFinishGame, selectStartGame }  from './counterSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport function MountChange() {\r\n  const dispatch = useDispatch();\r\n  const finish = useSelector(selectFinishGame);\r\n  const start = useSelector(selectStartGame);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(addCells(e.target.value));\r\n    dispatch(setHidden(false));\r\n  }\r\n  return (\r\n    <div className=\"mount-change\" style={{display: finish || start ? \"none\" : \"flex\"}}>\r\n        <div className=\"form_toggle\">\r\n          <div className=\"form_toggle-item item-1\">\r\n            <input onClick={handleChange} id=\"fid-1\" type=\"radio\" name=\"radio\" value=\"2\"/>\r\n            <label htmlFor=\"fid-1\">2x2</label>\r\n          </div>\r\n          <div className=\"form_toggle-item item-2\">\r\n            <input onClick={handleChange} id=\"fid-2\" type=\"radio\" name=\"radio\" value=\"4\"/>\r\n            <label htmlFor=\"fid-2\">4x4</label>\r\n          </div>\r\n          <div className=\"form_toggle-item item-3\">\r\n            <input onClick={handleChange} id=\"fid-3\" type=\"radio\" name=\"radio\" value=\"6\"/>\r\n            <label htmlFor=\"fid-3\">6x6</label>\r\n          </div>\r\n        </div>              \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { setTheme, selectFinishGame, selectStartGame }  from './counterSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport function Theme() {\r\n  const dispatch = useDispatch();\r\n  const finish = useSelector(selectFinishGame);\r\n  const start = useSelector(selectStartGame);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(setTheme(e.target.value));\r\n    // dispatch(setHidden(false));\r\n  }\r\n  return (\r\n    <div className=\"theme\"  style={{display: finish || start ? \"none\" : \"flex\"}}>\r\n        <p className=\"theme-title\">Тема</p>\r\n        <div className=\"mount-change\">\r\n            <div className=\"form_toggle\">\r\n            <div className=\"form_toggle-item item-1 item-theme-1\">\r\n                <input onClick={handleChange} id=\"theme-1\" type=\"radio\" name=\"theme\" value=\"light\" checked/>\r\n                <label htmlFor=\"theme-1\">Светлая</label>\r\n            </div>\r\n            <div className=\"form_toggle-item item-2 item-theme-2\">\r\n                <input onClick={handleChange} id=\"theme-2\" type=\"radio\" name=\"theme\" value=\"dark\"/>\r\n                <label htmlFor=\"theme-2\">Темная</label>\r\n            </div>\r\n            </div>              \r\n        </div>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { selectPlayers, selectThemeLight }  from './counterSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function Statistic() {\r\nconst themeLight = useSelector(selectThemeLight);\r\nconst players = useSelector(selectPlayers); \r\nconst arr = players.slice()\r\n.sort((a,b) => parseInt(b.points) - parseInt(a.points));\r\n      \r\nreturn (\r\n     <>\r\n    <div className=\"statistic\" style={{color: !themeLight ? \"white\" : \"black\"}}>\r\n      <div className=\"statistic-item\" >\r\n             <p className=\"number\">№</p>\r\n             <p className=\"name\">Имя</p>\r\n             <p className=\"points\">Очки</p>\r\n             <p className=\"mount\">Ходы</p>\r\n         </div>\r\n         {arr.map((item, idx) => \r\n         <div className=\"statistic-item\" key={idx}>\r\n             <p className=\"number\">{idx+1}</p>\r\n             <p className=\"name\">{item.name}</p>\r\n             <p className=\"points\">{item.points}</p>\r\n             <p className=\"mount\">{item.mount}</p>\r\n         </div>\r\n         )}  \r\n    </div>\r\n    </>\r\n    \r\n    );\r\n}","import React from 'react';\r\nimport {Statistic} from './Statistic';\r\nexport function Losing() {\r\n   \r\n  return (\r\n    <div className=\"losing\">\r\n      <h3 style={{margin: \"20px 0 0 0\"}}>Вы проиграли</h3>\r\n      <h4>Время истекло</h4>\r\n      <Statistic/>\r\n      \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { setPlayers, selectPlayers, selectStartGame, selectMovePlayer, selectThemeLight }  from './counterSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nexport function Players() {\r\nconst dispatch = useDispatch();    \r\nconst players = useSelector(selectPlayers);  \r\nconst start = useSelector(selectStartGame);  \r\nconst player = useSelector(selectMovePlayer);\r\nconst themeLight = useSelector(selectThemeLight);\r\n\r\nreturn (\r\n        <div className=\"players\">\r\n            {!start ?\r\n                players.map((item, idx) => \r\n                <div className={`player-${item.id + 1}`}  key={item.id}>\r\n                    <label htmlFor={idx}>Введите имя ИГРОК №{item.id + 1}: </label>\r\n                    <input id={idx} \r\n                        onChange={(e) => dispatch(setPlayers({id: e.target.id, value: e.target.value}))} \r\n                        type=\"text\" \r\n                        value={players[idx].name} \r\n                        placeholder={`Player ${item.id + 1}`}\r\n                        style={{color: !themeLight ? \"white\" : \"black\"}}/>\r\n                </div>) :\r\n                <div className=\"outPlayers\">\r\n                    <h1 className=\"toPlayer\">{player}</h1>\r\n                    <div className=\"outPlayers-item\">\r\n                        {players.map((item, idx) => \r\n                            <div className={`player-${item.id + 1}`} key={item.id}>\r\n                                <p>{players[idx].name}:</p>\r\n                                <p>Очков: <span className=\"points\">{players[idx].points}</span></p>\r\n                            </div>)} \r\n                    </div>   \r\n                </div>      \r\n            }\r\n        </div>\r\n    \r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Statistic} from './Statistic';\r\nimport { selectDraw }  from './counterSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function Finish() {\r\nconst draw = useSelector(selectDraw);   \r\n  return (\r\n    <div className=\"finish\">\r\n      {draw ? <h3>Ничья!</h3> : <h3>Вы выйграли!</h3>}\r\n      <Statistic/>\r\n      \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { selectLosing, selectFinishGame, selectThemeLight } from './counterSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function Refresh() {\r\n  const isLosing = useSelector(selectLosing);\r\n  const isFinish = useSelector(selectFinishGame);\r\n  const themeLight = useSelector(selectThemeLight);\r\n\r\n  const handleClick = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLosing || isFinish ?\r\n        <div className=\"refresh\">\r\n            <button \r\n                id=\"refresh\" \r\n                onClick = {handleClick}\r\n                style={{backgroundColor: themeLight ? \"rgb(110, 184, 147)\" : \"rgb(27, 73, 50)\"}}>Главное меню</button>     \r\n        </div> :\r\n        <></>\r\n      }\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport { Counter } from './features/counter/Counter';\nimport { Time } from './features/counter/Time';\nimport { MountChange  } from './features/counter/MountChange';\nimport { Theme } from './features/counter/Theme';\nimport { Losing } from './features/counter/Losing';\nimport { Players } from './features/counter/Players';\nimport { Finish } from './features/counter/Finish';\nimport { Refresh } from './features/counter/RefreshPage';\nimport { useSelector } from 'react-redux';\nimport { selectLosing, selectFinishGame, selectThemeLight } from './features/counter/counterSlice';\nimport './App.css';\n\nfunction App() {\n  const isLosing = useSelector(selectLosing);\n  const isFinish = useSelector(selectFinishGame);\n  const themeLight = useSelector(selectThemeLight);\n\n  return (\n    <div className=\"App\" style={{color: !themeLight ? \"white\" : \"black\"}}>\n      <h2 style={{backgroundColor: themeLight ? \"rgb(110, 184, 147)\" : \"rgb(27, 73, 50)\"}}>Memory</h2>\n      <div className=\"container\" style={{backgroundColor: themeLight ? \"rgb(190, 228, 218)\" : \"rgb(49, 112, 81\"}} >\n        <div className=\"setting\">\n          <MountChange/>\n          <Time/>\n          <Theme />\n          <Refresh/>\n        </div>\n        \n        {isLosing ? <Losing/> : isFinish ? <Finish/> : <Counter />}\n        {isFinish || isLosing? <div className=\"prop\"></div> : <Players />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}